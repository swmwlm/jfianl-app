package com.shoukeplus.jFinal.common.model;

import com.jfinal.plugin.activerecord.Db;
import com.shoukeplus.jFinal.common.model.base.BaseAdminUserRunas;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AdminUserRunas extends BaseAdminUserRunas<AdminUserRunas> {
	public static final AdminUserRunas dao = new AdminUserRunas();

	private Integer fromUserId;//授予身份帐号
	private Integer toUserId;//被授予身份帐号

	public Integer getFromUserId() {
		return super.getFromUserId();
	}

	public void setFromUserId(Integer fromUserId) {
		super.setFromUserId(fromUserId);
	}

	public Integer getToUserId() {
		return super.getToUserId();
	}

	public void setToUserId(Integer toUserId) {
		super.setToUserId(toUserId);
	}


	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		AdminUserRunas adminUserRunas = (AdminUserRunas) o;

		if (fromUserId != null ? !fromUserId.equals(adminUserRunas.fromUserId) : adminUserRunas.fromUserId != null)
			return false;
		if (toUserId != null ? !toUserId.equals(adminUserRunas.toUserId) : adminUserRunas.toUserId != null)
			return false;

		return true;
	}
	@Override
	public int hashCode() {
		int result = fromUserId != null ? fromUserId.hashCode() : 0;
		result = 31 * result + (toUserId != null ? toUserId.hashCode() : 0);
		return result;
	}

	@Override
	public String toString() {
		return "UserRunAs{" +
				"fromUserId=" + fromUserId +
				", toUserId=" + toUserId +
				'}';
	}


	public void grantRunAs(Integer fromUserId, Integer toUserId) {
		String sql = "insert into sk_admin_user_runas(from_user_id, to_user_id) values (?,?)";
		Db.update(sql,fromUserId,toUserId);
	}
	public boolean exists(Integer fromUserId, Integer toUserId) {
		String sql = "select count(1) as countAdminUser from sk_admin_user_runas where from_user_id=? and to_user_id=?";
		return super.findFirst(sql,fromUserId,toUserId).get("countAdminUser")!=0;
	}

	public void revokeRunAs(Integer fromUserId, Integer toUserId) {
		String sql = "delete from sk_admin_user_runas where from_user_id=? and to_user_id=?";
		Db.update(sql,fromUserId,toUserId);
	}
	public List<Integer> findFromUserIds(Integer toUserId) {
		String sql = "select from_user_id from sk_admin_user_runas where to_user_id=?";
		List<AdminUserRunas> adminUserRunases = super.find(sql,toUserId);
		List<Integer> fromUserIdList=new ArrayList<>();
		for (AdminUserRunas adminUserRunas:adminUserRunases){
			fromUserIdList.add(adminUserRunas.getInt("from_user_id"));
		}
		return fromUserIdList;
	}

	public List<Integer> findToUserIds(Integer fromUserId) {
		String sql = "select to_user_id from sk_admin_user_runas where from_user_id=?";
		List<AdminUserRunas> adminUserRunases = super.find(sql,fromUserId);
		List<Integer> toUserIdList=new ArrayList<>();
		for (AdminUserRunas adminUserRunas:adminUserRunases){
			toUserIdList.add(adminUserRunas.getInt("to_user_id"));
		}
		return toUserIdList;
	}
}

